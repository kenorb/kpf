<?php
// $Id: google_adwords.module,v 1.1 2010/12/09 07:41:11 jasonrsavino Exp $

// User permissions
define('GOOGLE_ADWORDS_ADMIN_PERM', 'administer google adwords module');
define('GOOGLE_ADWORDS_EDIT_PERM', 'edit google adwords parameters');

/**
 * Implementation of hook_perm().
 */
function google_adwords_perm() {
  return array(GOOGLE_ADWORDS_ADMIN_PERM, GOOGLE_ADWORDS_EDIT_PERM);
}

function google_adwords_menu(){
	$items = array();
  $items['admin/settings/google_adwords'] = array(
	  'title' => t('Google AdWords'),
	  'description' => t('Google AdWords Settings page.'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('google_adwords_admin_settings'),
	  'access arguments' => array(GOOGLE_ADWORDS_ADMIN_PERM),
	  'file' => 'google_adwords.admin.inc',
  );
  return $items;
}

/**
 * Implementation of hook_form_alter().
 */
function google_adwords_form_alter(&$form, $form_state, $form_id) {

  if ($form_id == 'node_type_form' && isset($form['identity']['type'])) {
    
    $form['google_adwords'] = array(
      '#type' => 'fieldset',
      '#access' => user_access(GOOGLE_ADWORDS_ADMIN_PERM),
      '#title' => t('Google AdWords'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => FALSE,
    );

    // Enable/disable Google AdWords for this content type.
    $form['google_adwords']['google_adwords_activation'] = array(
      '#type' => 'radios',
      '#title' => t('Google AdWords parameters'),
      '#description' => t('Provide Google AdWords for nodes of this content type.'),
      '#default_value' => variable_get('google_adwords_activation_'. $form['#node_type']->type, 0), // default to 'Disabled'
      '#options' => array(t('Disabled'), t('Enabled')),
    );
  }

  // Extend node creation and edit form with Google AdWords parameters.
  if (isset($form['type']) && isset($form['#node'])) {
    $node = $form['#node'];
    if ($form['type']['#value'] .'_node_form' == $form_id && variable_get('google_adwords_activation_'. $node->type, FALSE)) {
      // Google AdWords fieldset
      $form['google_adwords'] = array(
        '#type' => 'fieldset',
        '#access' => user_access(GOOGLE_ADWORDS_EDIT_PERM),
        '#title' => t('Google AdWords'),
        '#collapsible' => TRUE,
        '#collapsed' => empty($node->google_adwords),
        '#prefix' => '<div class="google-adwords-params">',
        '#suffix' => '</div>',
        '#weight' => 30,
        '#tree' => TRUE,
      );

      // Parameters
      $form['google_adwords']['enabled'] = array(
	      '#type' => 'radios',
	      '#title' => t('Enable Google AdWords on this node'),
	      '#default_value' => isset($node->google_adwords['enabled']) ? $node->google_adwords['enabled'] : 0,
	      '#options' => array(0 => t('No'), 1 => t('Yes')),
      );
			$form['google_adwords']['label'] = array(
        '#title' => t('Google Conversion Label'),
        '#type' => 'textfield',
        '#default_value' => isset($node->google_adwords['label']) ? $node->google_adwords['label'] : '',
      );
    }
  }
}

/**
 * Implementation of hook_nodeapi().
 */
function google_adwords_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
		switch ($op) {
			case 'load':
			  $adwords = google_adwords_load_params($node);
			  if (count($adwords) > 0) {
			    $fields['google_adwords'] = $adwords;
			    return $fields;
			  }
			  break;
	
			case 'insert':
			case 'update':
			  if (isset($node->google_adwords)) {
			    google_adwords_save_adwords($node);
			  }
			  break;
			
			case 'delete':
			  google_adwords_delete_adwords($node);
			  break;
			
			case 'delete revision':
			  google_adwords_delete_adwords_revision($node);
			  break;
		  case 'view':
			  $node->content['google_adwords_code'] = array(
				    '#value' => _google_adwords_view_adwords($node), 
				    '#weight' => 50,
				  );
			  break;
		}
}


/**
 * Load Google AdWords parameters for a node.
 */
function google_adwords_load_params($node) {
  if ($node->vid) {
    $result = db_fetch_array(db_query('SELECT * FROM {google_adwords} WHERE vid = %d', $node->vid));
    $adwords = array(
			'enabled' => $result['enabled'], 
			'label' => $result['label'],
		);
    return $adwords;
  } 
  else {
    return array();
  }
}

/**
 * Store Google AdWords parameters for a node in the custom module table.
 */
function google_adwords_save_adwords($node) {
  // Delete existing version
  db_query('DELETE FROM {google_adwords} WHERE nid = %d AND vid = %d', $node->nid, $node->vid);
  
  db_query("INSERT INTO {google_adwords} (nid, vid, enabled, label) VALUES (%d, %d, %d, '%s')", 
	    $node->nid, 
	    $node->vid, 
			$node->google_adwords['enabled'],
			$node->google_adwords['label']
    );

}

/**
 * Delete Google AdWords parameters from a node.
 */
function google_adwords_delete_adwords($node) {
  // Delete all revisions associated with the node
  db_query('DELETE FROM {google_adwords} WHERE nid = %d', $node->nid);
}

/**
 * Delete Google AdWords parameters from a node revision
 */
function google_adwords_delete_adwords_revision($node) {
  // delete the revision
  db_query('DELETE FROM {google_adwords} WHERE nid = %d AND vid = %d', $node->nid, $node->vid);
}


function _google_adwords_view_adwords($node) {
  global $user;
  global $language;
	
	$track = 0;
	if (is_array($user->roles)) {
		foreach ($user->roles as $role) {
			$role = str_replace(' ', '_', $role);
			$track += variable_get("google_adwords_track_{$role}", FALSE);
		}
	}
	
	// Don't track page views in the admin sections, or for certain roles
	if (arg(0) != 'admin' && $track > 0) {
		if($node->google_adwords['enabled'] <> 0) {
		  
      $label = $node->google_adwords['label'];
		  $id = variable_get('google_adwords_conversion_id', 0);
		  $language = variable_get('google_adwords_conversion_language', $language->language);
		  $format = variable_get('google_adwords_conversion_format', '2');
		  $color = variable_get('google_adwords_conversion_color', 'FFFFFF');
		  $google_js = variable_get('google_adwords_external_script', 'https://www.googleadservices.com/pagead/conversion.js');
		  
		  $output = '';
		  
		  $output .= "\n" . '<!-- Google Code for Conversion Page -->' . "\n";
		  $output .= '<script language="JavaScript" type="text/javascript">' . "\n";
		  $output .= '<!--' . "\n";
		  $output .= '    var google_conversion_id = '. $id .';' . "\n";
		  $output .= '    var google_conversion_language = "'. $language .'";' . "\n";
		  $output .= '    var google_conversion_format = "'. $format .'";' . "\n";
		  $output .= '    var google_conversion_color = "'. $color .'";' . "\n";
		  $output .= '    var google_conversion_label = "'. $label .'";' . "\n";
		  $output .= '//-->' . "\n";
		  $output .= '</script>' . "\n";
		  $output .= '<script language="JavaScript" src="' . $google_js . '"></script>' . "\n";
		  $output .= '<noscript>' . "\n";
		  $output .= '    <img height="1" width="1" border="0" src="https://www.googleadservices.com/pagead/conversion/' . $id . '/?label='. $label .'&amp;guid=ON&amp;script=0"/>' . "\n";
		  $output .= '</noscript>' . "\n";
		  		 
		  return $output;
		  
	  }
	}  
}
